{"version":3,"sources":["store/actionTypes.js","store/actionCreators.js","PostForm.js","PostDrawer.js","PostList.js","store/reducers.js","store/sagas.js","store/index.js","ApiSetting.js","index.js"],"names":["UPDATE_POST","ADD_POST","DELETE_POST","GET_CURRENT_LIST","getCurrentListAction","type","getUpdateListAction","list","value","getUpdateLoadingAction","boolean","TextArea","Input","PostForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","item","handlePostUpdate","Object","objectSpread","id","handleAddPost","resetFields","closeDrawer","_this$props","this","getFieldDecorator","react_default","a","createElement","es_form","onSubmit","className","Item","initialValue","author","rules","required","message","input","prefix","icon","style","color","placeholder","content","autosize","minRows","maxRows","textAlign","es_button","htmlType","Component","connect","dispatch","post","getAddPostAction","Form","create","PostDrawer","state","visible","showDrawer","setState","onClose","_this2","label","title","onClick","drawer","width","placement","src_PostForm","PostList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showingError","handleDeletePost","loading","react","row","margin","col","span","offset","src_PostDrawer","es_list","bordered","dataSource","renderItem","actions","skeleton","description","active","Meta","getDeletePostAction","defaultState","protocol","api","errorMsg","getApi","setLoading","getCurrentList","addPost","updatePost","deletePost","mySaga","_ref","regenerator_default","wrap","_context","prev","next","select","sent","abrupt","concat","stop","_marked","action","_context2","put","_marked2","showErrorMsg","msg","error","res","data","_context3","axios","get","reverse","t0","_marked3","payload","_context4","_marked4","_payload$value","_context5","_marked5","_context6","delete","_marked6","_context7","takeEvery","_marked7","sagaMiddleware","createSagaMiddleware","store","createStore","arguments","length","undefined","newState","JSON","parse","stringify","composeWithDevTools","applyMiddleware","run","sagas","Option","Select","ApiSetting","hide","handleVisibleChange","handleGetList","selectBefore","es_select","onChange","handleProtocolChange","fontSize","marginRight","popover","display","flexDirection","alignItems","addonBefore","handleUpdateApi","handleSync","marginTop","trigger","onVisibleChange","target","ReactDOM","render","es","src_ApiSetting","src_PostList","document","getElementById"],"mappings":"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","file":"static/js/main.5dea1a40.chunk.js","sourcesContent":["export const UPDATE_POST = 'update_post';\nexport const ADD_POST = 'add_post';\nexport const DELETE_POST = 'delete_post';\nexport const GET_CURRENT_LIST = 'get_current_list';\nexport const UPDATE_CURRENT_LIST = 'update_current_list';\nexport const UPDATE_API = 'update_api';\nexport const UPDATE_PROTOCOL = 'update_protocol';\nexport const SET_LOADING = 'set_loading';\nexport const SET_ERROR = 'set_error';\n","import {\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  GET_CURRENT_LIST,\n  UPDATE_CURRENT_LIST,\n  UPDATE_API,\n  UPDATE_PROTOCOL,\n  SET_LOADING,\n  SET_ERROR\n} from './actionTypes';\n\nexport const getPostUpdateAction = value => ({\n  type: UPDATE_POST,\n  value\n});\n\nexport const getCurrentListAction = () => ({\n  type: GET_CURRENT_LIST\n});\n\nexport const getUpdateApiAction = api => ({\n  type: UPDATE_API,\n  value: api\n});\n\nexport const getUpdateProtocolAction = protocol => ({\n  type: UPDATE_PROTOCOL,\n  value: protocol\n});\n\nexport const getAddPostAction = post => ({\n  type: ADD_POST,\n  value: post\n});\n\nexport const getDeletePostAction = id => ({\n  type: DELETE_POST,\n  value: id\n});\n\nexport const getUpdateListAction = list => ({\n  type: UPDATE_CURRENT_LIST,\n  value: list\n});\n\nexport const getUpdateLoadingAction = boolean => ({\n  type: SET_LOADING,\n  value: boolean\n});\n\nexport const getUpdateErrorAction = msg => ({\n  type: SET_ERROR,\n  value: msg\n});\n","import React, { Component } from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { getAddPostAction, getPostUpdateAction } from './store/actionCreators';\nconst { TextArea } = Input;\n\nclass PostForm extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.item) {\n          this.props.handlePostUpdate({\n            ...values,\n            id: this.props.item.id\n          });\n        } else {\n          this.props.handleAddPost(values);\n        }\n        this.props.form.resetFields();\n        this.props.closeDrawer();\n      }\n    });\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      item\n    } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"post-form\">\n        <Form.Item>\n          {getFieldDecorator('author', {\n            initialValue: item ? item.author : '',\n            rules: [{ required: true, message: 'Please input author name!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Author\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('content', {\n            initialValue: item ? item.content : '',\n            rules: [{ required: true, message: 'Please input the content!' }]\n          })(\n            <TextArea\n              placeholder=\"Content\"\n              autosize={{ minRows: 3, maxRows: 8 }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item style={{ textAlign: 'center' }}>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"post-form-button\">\n            {item ? 'Update' : 'Add'}\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleAddPost(post) {\n      dispatch(getAddPostAction(post));\n    },\n    handlePostUpdate(post) {\n      dispatch(getPostUpdateAction(post));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Form.create()(PostForm));\n","import React, { Component } from 'react';\nimport { Drawer, Button, Icon } from 'antd';\nimport PostForm from './PostForm';\n\nclass PostDrawer extends Component {\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    const { item } = this.props;\n    let label = 'New Post';\n    let title = 'Create New Post';\n    let type = 'plus';\n    if (item) {\n      label = 'Edit';\n      title = 'Edit Post';\n      type = 'edit';\n    }\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showDrawer}>\n          <Icon type={type} /> {label}\n        </Button>\n        <Drawer\n          title={title}\n          width={320}\n          placement=\"left\"\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <PostForm item={item} closeDrawer={() => this.onClose()} />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default PostDrawer;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport { Button, List, Col, Row, Skeleton } from 'antd';\nimport {\n  getDeletePostAction,\n  getCurrentListAction\n} from './store/actionCreators';\nimport PostDrawer from './PostDrawer';\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showingError: false };\n  }\n\n  render() {\n    const { list, handleDeletePost, loading } = this.props;\n\n    return (\n      <Fragment>\n        <Row style={{ margin: '10px' }}>\n          <Col span={4} offset={10} style={{ textAlign: 'center' }}>\n            <PostDrawer />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col span={12} offset={6}>\n            <List\n              bordered\n              dataSource={list}\n              renderItem={item => (\n                <List.Item\n                  actions={[\n                    <PostDrawer item={item}>edit</PostDrawer>,\n                    <Button\n                      type=\"danger\"\n                      onClick={() => handleDeletePost(item.id)}\n                    >\n                      delete\n                    </Button>\n                  ]}\n                >\n                  <Skeleton title description loading={loading} active>\n                    <List.Item.Meta\n                      title={item.author}\n                      description={item.content}\n                    />\n                  </Skeleton>\n                </List.Item>\n              )}\n            />\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    list: state.list,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  dispatch(getCurrentListAction());\n  return {\n    handleDeletePost(id) {\n      dispatch(getDeletePostAction(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);\n","import {\n  UPDATE_CURRENT_LIST,\n  UPDATE_API,\n  UPDATE_PROTOCOL,\n  SET_LOADING,\n  SET_ERROR\n} from './actionTypes';\n\nconst defaultState = {\n  protocol: 'https://',\n  api: 'jr-posts.herokuapp.com/v1',\n  loading: false,\n  errorMsg: '',\n  list: []\n};\n\nexport default (state = defaultState, action) => {\n  if (action.type === UPDATE_CURRENT_LIST) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list = action.value;\n    return newState;\n  }\n\n  if (action.type === UPDATE_API) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.api = action.value;\n    return newState;\n  }\n\n  if (action.type === UPDATE_PROTOCOL) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.protocol = action.value;\n    return newState;\n  }\n\n  if (action.type === SET_LOADING) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.loading = action.value;\n    return newState;\n  }\n\n  if (action.type === SET_ERROR) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.errorMsg = action.value;\n    return newState;\n  }\n\n  return state;\n};\n","import { takeEvery, put, select } from 'redux-saga/effects';\nimport { message } from 'antd';\nimport {\n  GET_CURRENT_LIST,\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST\n} from './actionTypes';\nimport { getUpdateListAction, getUpdateLoadingAction } from './actionCreators';\nimport axios from 'axios';\n\nfunction* getApi() {\n  const { api, protocol } = yield select();\n  return `${protocol}${api}`;\n}\n\nfunction* setLoading(boolean) {\n  const action = getUpdateLoadingAction(boolean);\n  yield put(action);\n}\n\nfunction showErrorMsg(msg) {\n  // const action = getUpdateErrorAction(msg);\n  // yield put(action);\n  message.error(msg);\n}\n\nfunction* getCurrentList() {\n  const api = yield getApi();\n  try {\n    yield setLoading(true);\n    const res = yield axios.get(`${api}/posts`);\n    const { data } = res;\n    const action = getUpdateListAction(data.reverse());\n    yield put(action);\n    yield setLoading(false);\n  } catch (e) {\n    yield setLoading(false);\n    showErrorMsg(e.message);\n  }\n}\n\nfunction* addPost(payload) {\n  const api = yield getApi();\n  try {\n    yield axios.post(`${api}/posts`, payload.value);\n    yield getCurrentList();\n  } catch (e) {\n    showErrorMsg(e.message);\n  }\n}\n\nfunction* updatePost(payload) {\n  const api = yield getApi();\n  const { id, author, content } = payload.value;\n  try {\n    yield axios.put(`${api}/posts/${id}`, { author, content });\n    yield getCurrentList();\n  } catch (e) {\n    showErrorMsg(e.message);\n  }\n}\n\nfunction* deletePost(payload) {\n  const api = yield getApi();\n  try {\n    yield axios.delete(`${api}/posts/${payload.value}`);\n    yield getCurrentList();\n  } catch (e) {\n    showErrorMsg(e.message);\n  }\n}\n\n// generator function\nfunction* mySaga() {\n  // 捕捉每一个action类型\n  yield takeEvery(GET_CURRENT_LIST, getCurrentList);\n  yield takeEvery(DELETE_POST, deletePost);\n  yield takeEvery(UPDATE_POST, updatePost);\n  yield takeEvery(ADD_POST, addPost);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from './sagas';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\n// then run the saga\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Popover, Button, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport { Input, Select } from 'antd';\nimport {\n  getUpdateApiAction,\n  getUpdateProtocolAction,\n  getCurrentListAction\n} from './store/actionCreators';\n\nconst Option = Select.Option;\n\nclass ApiSetting extends Component {\n  state = {\n    visible: false\n  };\n\n  hide = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  handleVisibleChange = visible => {\n    this.setState({ visible });\n  };\n\n  handleSync() {\n    this.hide();\n    this.props.handleGetList();\n  }\n\n  render() {\n    const selectBefore = (\n      <Select\n        value={this.props.protocol}\n        style={{ width: 100 }}\n        onChange={this.props.handleProtocolChange}\n      >\n        <Option value=\"http://\">http://</Option>\n        <Option value=\"https://\">https://</Option>\n      </Select>\n    );\n    return (\n      <div\n        style={{\n          fontSize: '1.5rem',\n          textAlign: 'right',\n          marginRight: '.8rem'\n        }}\n      >\n        <Popover\n          content={\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              }}\n            >\n              <Input\n                addonBefore={selectBefore}\n                value={this.props.api}\n                onChange={this.props.handleUpdateApi}\n              />\n              <Button\n                onClick={() => this.handleSync()}\n                style={{ marginTop: 10 }}\n                type=\"primary\"\n              >\n                Sync Now\n              </Button>\n            </div>\n          }\n          placement=\"bottomRight\"\n          title=\"Change API\"\n          trigger=\"click\"\n          visible={this.state.visible}\n          onVisibleChange={this.handleVisibleChange}\n        >\n          <Icon type=\"setting\" />\n        </Popover>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    api: state.api,\n    protocol: state.protocol\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleUpdateApi(e) {\n      dispatch(getUpdateApiAction(e.target.value));\n    },\n    handleProtocolChange(value) {\n      dispatch(getUpdateProtocolAction(value));\n    },\n    handleGetList() {\n      dispatch(getCurrentListAction());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ApiSetting);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport PostList from './PostList';\nimport store from './store';\nimport ApiSetting from './ApiSetting';\n\nconst App = () => (\n  <Provider store={store}>\n    <ApiSetting />\n    <PostList />\n  </Provider>\n);\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}